@using ColorBlend.Models;
@using ColorBlend.ViewModels;

@if (ViewModel?.ColorsSetList == null)
{
    <RadzenText TextStyle="TextStyle.H6">loading...</RadzenText>
}

else
{
    @foreach (var colors in ViewModel.ColorsSetList.OrderByDescending(i => i.TimeMixed))
    {
        <RadzenCard Class="rz-background-color-base-200 rz-my-4 rz-mx-4" Style="width:stretch">           
                <RadzenStack Gap="0">
                    <RadzenRow RowGap="5">
                        <RadzenColumn SizeSM="2">
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-my-1">Cover</RadzenText>
                            <RadzenText style="" TextStyle="TextStyle.Subtitle2">"Phewture Funk"</RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-6 rz-mb-1">Time mixed</RadzenText>
                            <RadzenText style="" TextStyle="TextStyle.Subtitle2">@colors.TimeMixed</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn SizeSM="2">
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-my-1">Colors</RadzenText>
                            <RadzenText style="" TextStyle="TextStyle.Subtitle2">@colors.Color1Info</RadzenText>
                            <RadzenText style="" TextStyle="TextStyle.Subtitle2">@colors.MixingResultInfo</RadzenText>
                            <RadzenText style="" TextStyle="TextStyle.Subtitle2">@colors.Color2Info</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn SizeSM="7"> 
                            <div class="d-flex flex-row" style="height:120px">                           
                                <div class="w-100 p-5 m-1" style="width:300px;border-radius:2px; background-color: @colors.Color1"></div>                            
                                <div class="w-100 p-5 m-1" style="width:300px;border-radius:2px; background-color: @colors.ColorMixed"></div>                            
                                <div class="w-100 p-5 m-1" style="width:300px;border-radius:2px; background-color: @colors.Color2"></div>
                            </div>
                        </RadzenColumn>                    
                        <RadzenColumn SizeSM="1">                    
                            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0" class="rz-display-flex rz-mt-4 rz-my-1">                     
                                <RadzenButton Variant="Variant.Text"      
                                ButtonStyle="ButtonStyle.Primary"
                                Icon="delete"
                                Click="@(() => Remove(colors))"                           
                                disabled="@ViewModel.IsBusy"
                                style="margin:20px;width:50px; height: 50px;box-shadow: var(--rz-shadow-2)"
                                />
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>
        </RadzenCard>
    }
}

@code {
    [CascadingParameter(Name = "ViewModel")]
    IColorsViewModel ViewModel { get; set; }

    void Remove(ColorsSet colorsSet)
    {
        ViewModel.ColorsSetList.Remove(colorsSet);
    }
}